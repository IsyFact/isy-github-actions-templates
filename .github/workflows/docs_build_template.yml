name: Trigger Documentation Build Template

on:
  workflow_call:
    inputs:
      log_level:
        description: 'Log level for the Antora build (debug, info, warn, error)'
        required: false
        type: string
        default: 'debug'
    secrets:
      ANTORA_TRIGGER_TOKEN:
        description: 'GitHub token to trigger the documentation build'
        required: true

jobs:
  TriggerDocsBuild:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger documentation build
        uses: codex-/return-dispatch@v1.12.0
        id: trigger_build
        with:
          token: ${{ secrets.ANTORA_TRIGGER_TOKEN }}
          ref: feature/ISY-998-Analyse_Sichtbarkeit_der_Doku_Warnungen
          repo: isyfact.github.io
          owner: IsyFact
          workflow: antora_build.yml
          workflow_inputs: '{ "log_level": "${{ inputs.log_level }}" }'

      - name: Wait for documentation build completion (Run ID - ${{ steps.trigger_build.outputs.run_id }})
        uses: codex-/await-remote-run@v1.11.0
        with:
          token: ${{ secrets.ANTORA_TRIGGER_TOKEN }}
          repo: isyfact.github.io
          owner: IsyFact
          run_id: ${{ steps.trigger_build.outputs.run_id }}
          run_timeout_seconds: 300 # 5 minutes (optional)
          poll_interval_ms: 5000 # 5 seconds (optional)

      - name: Fetch and extract Build Documentation logs
        env:
          GH_TOKEN: ${{ secrets.ANTORA_TRIGGER_TOKEN }}
          OWNER: IsyFact
          REPO: isyfact.github.io
          RUN_ID: ${{ steps.trigger_build.outputs.run_id }}
        run: |
          # Fetch the logs for the given run ID using GitHub CLI
          echo "Fetching logs for run ID: $RUN_ID from repository $OWNER/$REPO"
          
          # Use gh CLI to download the logs
          gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$OWNER/$REPO/actions/runs/$RUN_ID/logs > logs.zip
  
          # Unzip the logs
          unzip logs.zip -d logs
          
          # Find and print logs for the 'Build Documentation' step
          build_log_file=$(find logs -type f -name "*Build Documentation*")
          
          if [ -z "$build_log_file" ]; then
            echo "Build Documentation logs not found."
          else
            echo "Build Documentation logs found: $build_log_file"
            
             # Remove timestamps from the log file
            echo "Processing logs to remove timestamps..."
            sed 's/^[0-9TZ:\.-]*Z //g' "$build_log_file" > "$build_log_file"_cleaned  
        
            # Display the cleaned logs
            echo "Cleaned Build Documentation logs:"
            cat "$build_log_file"_cleaned
          fi
