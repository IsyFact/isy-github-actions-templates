name: OSS Review Toolkit
on:
  workflow_call:

jobs:
  ort:
    runs-on: ubuntu-latest
    steps:
      - name: Use HTTPS instead of SSH for Git cloning
        run: git config --global url.https://github.com/.insteadOf ssh://git@github.com/
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Download report template
        run: |
          curl -o cve_summary_report_template.ftl https://raw.githubusercontent.com/IsyFact/isy-github-actions-templates/v1.2.0/ort-config/cve_summary_report_template.ftl
      - name: Download license management config files
        run: |
          echo "downloading ORT License Management config files..."
          curl -o license-classifications.yml https://raw.githubusercontent.com/IsyFact/isy-github-actions-templates/feature/main_OSS_Review_Toolkit/ort-config/license-classifications.yml
          curl -o evaluator.rules.kts https://raw.githubusercontent.com/IsyFact/isy-github-actions-templates/feature/main_OSS_Review_Toolkit/ort-config/evaluator.rules.kts
          echo "ORT License Management config files download successful"
      - name: Run GitHub Action for ORT
        uses: oss-review-toolkit/ort-ci-github-action@v1
        with:
          docker-cli-args:
            --mount type=bind,source=${{ github.workspace }},target=/home/ort/.ort/templates/
            --mount type=bind,source=${{ github.workspace }},target=/home/ort/.ort/config/
          report-formats: WebApp,StaticHtml,HtmlTemplate -O HtmlTemplate=template.path=/home/ort/.ort/templates/cve_summary_report_template.ftl
      - name: Download workflow artifacts
        uses: actions/download-artifact@v4
        with:
          path: ort-reports
      - name: Move report to correct directory
        run: |
          mv ort-reports/ort-results-*/AsciiDoc_cve_summary_report_template.html ort-reports/
          mv ort-reports/ort-results-*/scan-report-web-app.html ort-reports/
      - name: Install sed
        run: sudo apt-get install sed
      - name: Edit report file
        run: |
#           extract "last updated" string from footer and write it to a text file
          sed -n '/<div id="footer-text">/,/<\/div>/ {
          /<div id="footer-text">/d
          /<\/div>/d
          p
          }' ort-reports/AsciiDoc_cve_summary_report_template.html > ort-reports/last_updated_text.txt
#           remove the empty footer
          sed -e '/<div id="footer-text">/,/<\/div>/d' ort-reports/AsciiDoc_cve_summary_report_template.html
#           write the "last updated" string in the head node
          sed -e '/<\/head>/ {
          r ort-reports/last_updated_text.txt
          }' ort-reports/AsciiDoc_cve_summary_report_template.html
#          mv ort-reports/AsciiDoc_cve_summary_report_template_modified.html ort-reports/AsciiDoc_cve_summary_report_template.html
      - name: Commit and push report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ort-reports/AsciiDoc_cve_summary_report_template.html
          git commit -m "docs: uploaded latest ort report"
          git push origin HEAD:${{ github.ref }}
