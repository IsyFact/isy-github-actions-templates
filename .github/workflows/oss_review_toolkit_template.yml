name: OSS Review Toolkit
on:
  workflow_call:
    secrets:
      ANTORA_TRIGGER_TOKEN:
        description: 'GitHub token to trigger the documentation build'
        required: true

jobs:
  ort:
    runs-on: ubuntu-latest
    steps:
      - name: Use HTTPS instead of SSH for Git cloning
        run: git config --global url.https://github.com/.insteadOf ssh://git@github.com/
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Download report template
        run: |
          curl -o cve_summary_report_template.ftl https://raw.githubusercontent.com/IsyFact/isy-github-actions-templates/v1.5.0/ort-config/cve_summary_report_template.ftl
      - name: Download license management config files
        run: |
          echo "downloading ORT License Management config files..."
          curl -o license-classifications.yml https://raw.githubusercontent.com/IsyFact/isy-github-actions-templates/v1.5.0/ort-config/license-classifications.yml
#          curl -o evaluator.rules.kts https://raw.githubusercontent.com/IsyFact/isy-github-actions-templates/v1.5.0/ort-config/evaluator.rules.kts
          curl -o evaluator.rules.kts https://raw.githubusercontent.com/IsyFact/isy-github-actions-templates/ort-config/evaluator.rules.kts@feature/ifs-3956-main_ort
          echo "ORT License Management config files download successful"
      - name: Run GitHub Action for ORT
        uses: oss-review-toolkit/ort-ci-github-action@v1
        with:
          docker-cli-args:
            --mount type=bind,source=${{ github.workspace }},target=/home/ort/.ort/templates/
            --mount type=bind,source=${{ github.workspace }},target=/home/ort/.ort/config/
          report-formats: WebApp,StaticHtml,HtmlTemplate -O HtmlTemplate=template.path=/home/ort/.ort/templates/cve_summary_report_template.ftl
      - name: Download workflow artifacts
        uses: actions/download-artifact@v4
        with:
          path: ort-reports
      - name: Move report to correct directory
        run: |
          mv ort-reports/ort-results-*/AsciiDoc_cve_summary_report_template.html ort-reports/
          mv ort-reports/ort-results-*/scan-report-web-app.html ort-reports/
      - name: Install sed
        run: sudo apt-get -y install sed
      - name: Edit report file
        run: |
          sed -n '/<div id="footer-text">/,/<\/div>/ {
          /<div id="footer-text">/d
          /<\/div>/d
          p
          }' ort-reports/AsciiDoc_cve_summary_report_template.html > ort-reports/last_updated_text.txt
          
          sed -e '/<div id="footer-text">/,/<\/div>/d' \
          ort-reports/AsciiDoc_cve_summary_report_template.html > ort-reports/AsciiDoc_cve_summary_report_template_modified.html
          
          sed -e '/<\/head>/ {
          r ort-reports/last_updated_text.txt
          }' ort-reports/AsciiDoc_cve_summary_report_template_modified.html > ort-reports/final_output.html
          
          mv ort-reports/final_output.html ort-reports/AsciiDoc_cve_summary_report_template.html
          
          rm ort-reports/last_updated_text.txt ort-reports/AsciiDoc_cve_summary_report_template_modified.html

      - name: Commit and push report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git config pull.rebase true
          timestamp=$(date +"%d%m%Y_%H%M")
          branch_name="feature/ort-report_$timestamp"
          git checkout -b $branch_name
          git add ort-reports/AsciiDoc_cve_summary_report_template.html
          git commit -m "docs: uploaded latest ort report"
          default_branch=$(git remote show origin | grep "HEAD branch" | cut -d' ' -f5)
          git pull origin $default_branch
          git push -u origin $branch_name
          gh pr create --base $default_branch --head $branch_name --title "docs: PR for latest ort report" --body "This PR updates the ort cve reports of this repository, published in the antora documentation"

      - name: Approve and merge PR
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PR_TOKEN }}
        run: |
          pr_number=$(gh pr list --state open --json title,number --jq '.[] | select(.title == "docs: PR for latest ort report") | .number')
          git config --global user.name 'mariusarltmsg'
          git config --global user.email 'marius.arlt@msg.group'
          gh pr review $pr_number --approve
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          gh pr merge $pr_number --merge --delete-branch --admin
  antora_build:
    needs: ort
    uses: IsyFact/isy-github-actions-templates/.github/workflows/docs_build_template.yml@v1.5.0
    secrets:
      ANTORA_TRIGGER_TOKEN: ${{ secrets.ANTORA_TRIGGER_TOKEN }}
